{"version":3,"sources":["shared/context/auth-context.js","shared/components/UI/LoadingSpinner.js","shared/components/UI/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","content","onClick","ReactDOM","createPortal","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.c9b576af.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from \"react\";\n\nimport \"./LoadingSpinner.css\";\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Backdrop.css\";\n\nconst Backdrop = props => {\n  const content = <div className=\"backdrop\" onClick={props.onClick}></div>;\n\n  return ReactDOM.createPortal(\n    content,\n    document.getElementById(\"backdrop-hook\")\n  );\n};\n\nexport default Backdrop;\n","import { useEffect, useCallback, useState } from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState();\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(null);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n\n    setTokenExpirationDate(tokenExpirationDate);\n\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from \"react\";\n\nimport \"./MainHeader.css\";\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AuthContext } from \"../../context/auth-context\";\nimport \"./NavLinks.css\";\n\nconst NavLinks = () => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UI/Backdrop\";\nimport \"./MainNavigation.css\";\n\nconst MainNavigation = () => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UI/LoadingSpinner\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./place/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./place/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./place/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:uid/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:uid/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Switch>\n            <Suspense\n              fallback={\n                <div className=\"center\">\n                  <LoadingSpinner />\n                </div>\n              }\n            >\n              {routes}\n            </Suspense>\n          </Switch>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}